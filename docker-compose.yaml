version: '3.8'
services:
  sql-server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: informatica_sql_server
    restart: always
    user: root
    environment:
      SA_PASSWORD: "Brai123@Secure"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sql_server_data:/var/opt/mssql/data
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"Brai123@Secure\" -Q \"SELECT 1\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: informatica_api
    restart: always
    ports:
      - "8080:80"
    environment:
      ConnectionStrings__defaultConnection: "Server=sql-server;DataBase=Informatica;User Id=sa;Password=Brai123@Secure;TrustServerCertificate=True"
      AppSettings__Secreto: "12381989as1938192981992as1129898911212989a98"
      AppSettings__Issuer: "http://api"
      AppSettings__Audience: "http://frontend-service"
      ASPNETCORE_URLS: "http://+:80"
      ASPNETCORE_ENVIRONMENT: "Development"
    depends_on:
      sql-server:
        condition: service_healthy
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  # --- SERVICIO PARA EL FRONTEND ---
  frontend-service: 
    build:
      context: ../SCI-Front/app
      dockerfile: Dockerfile
    container_name: informatica_frontend
    restart: always
    ports:
      - "4200:80"
    environment: {} 
    depends_on:
      api:
        condition: service_started

volumes:
  sql_server_data: